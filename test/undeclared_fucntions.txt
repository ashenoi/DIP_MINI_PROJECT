	MV_array();
	void calculate_motion_vectors_overlap(int lambda_value);
	void calculate_reliability();
	void calculate_pixel_reliability();
	void validity_for_SR();
	void calculate_pixel_reliability_multiplevectors();
	void calculate_smoothness_reliability();
	void calculate_smoothness_reliability2();
	void calculate_deviation_reliability();
	void calculate_gradient_reliability();
    void calculate_block_overlap();
	void calculate_pixel_overlap();
	void calculate_pixel_overlap_multiplevectors(double& mean);
	double find_overlap_max();
	int get_overlap_volume(int x_pos, int y_pos);
	void calculate_singleMV_overlap(int b_size, int pos_y, int pos_x, int& top_left, int& top_right, int& bottom_left, int& bottom_right);
	//int calculate_singleMV_overlap(int b_size, int i, int j);
	void onelevlspiral_BM_minoverlap();
	//void onelevlspiral_BM_adapt();
	void nextlevlspiral_BM_minoverlap(int start_direction);
	void nextlevlspiral_BM_weightedoverlap(int start_direction);
	void nextlevlspiral_minoverlap2();
	//void setMVs_iter_oddbsize();
	void minimize_overlap(); 
	void minimize_overlap2();
	//void get_subpixel_MVs();
	double calc_derivX(int k, int l);
    double calc_derivY(int k, int l);
	double cost_fn_top_overlap(int v_yval, int v_xval, int orig_y, int orig_x);
	double cost_fn_left_overlap(int v_yval, int v_xval, int orig_y, int orig_x);
	double cost_fn_right_overlap(int v_yval, int v_xval, int orig_y, int orig_x);
	double cost_fn_bottom_overlap(int v_yval, int v_xval, int orig_y, int orig_x);
	double cost_fn_leftcorn_overlap(int v_yval, int v_xval, int orig_y, int orig_x);
	double cost_fn_rightcorn_overlap(int v_yval, int v_xval, int orig_y, int orig_x);
	double cost_fn_bottomleftcorn_overlap(int v_yval, int v_xval, int orig_y, int orig_x);
	double cost_fn_bottomrightcorn_overlap(int v_yval, int v_xval, int orig_y, int orig_x);
	double angle_similarity(int y, int x, int i, int j);
